.prose {
  --md-color-lighter: #ccc;
  --md-color-light: #999;
  --md-color: #555;
  --md-color-deep: #444;
  --md-color-deeper: #222;

  font-size: 15px;
  max-width: 65ch;
  line-height: 1.75;
  color: var(--md-color);
}

html.dark .prose {
  --md-color-lighter: #444;
  --md-color-light: #666;
  --md-color: #aaa;
  --md-color-deep: #bbb;
  --md-color-deeper: #ddd;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose :where(.prose a):not(:where([class~="not-prose"] *)) {
  color: var(--md-color-deep);
  text-decoration: underline;
}

.prose :where(.prose strong):not(:where([class~="not-prose"] *)) {
  color: var(--md-color-deep);
  font-weight: 700;
}

.prose :where(.prose a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose p):not(:where([class~="not-prose"] *)) {
  margin-top: 16px;
  margin-bottom: 16px;
}

.prose :where(.prose img):not(:where([class~="not-prose"] *)) {
  margin: 32px auto;
  border-radius: 6px;
}

.prose :where(.prose hr):not(:where([class~="not-prose"] *)) {
  border-color: rgba(125, 125, 125, 0.3);
  border-top-width: 1px;
  margin-top: 48px;
  margin-bottom: 48px;
}

.prose :where(.prose hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 20px;
  margin-bottom: 20px;
  padding-left: 26px;
}

.prose :where(.prose ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 20px;
  margin-bottom: 20px;
  padding-left: 26px;
}

.prose :where(.prose li):not(:where([class~="not-prose"] *)) {
  padding-left: 6px;
  margin-top: 8px;
  margin-bottom: 8px;
}

.prose :where(.prose ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--md-color-lighter);
}

.prose :where(.prose ol > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--md-color-light);
  font-weight: 400;
}

.prose :where(.prose blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 400;
  color: inherit;
  padding-left: 16px;
  margin-top: 24px;
  margin-bottom: 24px;
  border-left-width: 4px;
  border-left-color: rgba(125, 125, 125, 0.25);
}

.prose :where(.prose h2):not(:where([class~="not-prose"] *)) {
  color: var(--md-color-deeper);
  font-weight: 700;
  font-size: 24px;
  margin-top: 48px;
  margin-bottom: 24px;
  line-height: 1.3333333;
}

.prose :where(.prose h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose h3):not(:where([class~="not-prose"] *)) {
  color: var(--md-color-deeper);
  font-weight: 700;
  font-size: 20px;
  margin-top: 36px;
  margin-bottom: 18px;
  line-height: 1.6;
}

.prose :where(.prose h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose h4):not(:where([class~="not-prose"] *)) {
  color: var(--md-color-deeper);
  font-size: 18px;
  font-weight: 700;
  margin-top: 32px;
  margin-bottom: 16px;
  line-height: 1.5;
}

.prose :where(.prose h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose code):not(:where([class~="not-prose"] *)) {
  padding: 2px 5.6px;
  background-color: rgba(125, 125, 125, 0.15);
  border: 1px solid rgba(125, 125, 125, 0.4);
  font-size: 14px;
  border-radius: 4px;
}

.prose :where(.prose h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(.prose pre):not(:where([class~="not-prose"] *)) {
  color: inherit;
  color: var(--md-color-deep);
  background-color: rgba(125, 125, 125, 0.08);
  overflow-x: auto;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.7142857;
  margin-top: 24px;
  margin-bottom: 24px;
  border-radius: 6px;
  padding-top: 12px;
  padding-right: 16px;
  padding-bottom: 12px;
  padding-left: 16px;
}

.prose :where(.prose pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}